/* This is a sample config file for Poseidon. No rights reserved.
 *
 * The syntax is similar to JSON5, with a few differences:
 * 1. Equals signs may be used in place of colons.
 * 2. Commas shall not be used as element delimiters.
 * 3. Genuine signed 64-bit integers are supported.
 * 4. Strings cannot straddle multiple lines.
 * 5. Single-quoted strings do not support escapes, like in Perl or Shell.
 *
 * You may copy it to `main.conf` and make modifications at your disposal.
**/

general: {
  /* These are miscellaneous uncategorized options.
   *
   *   permit_root_startup:
   *     true           = the program may start as root (DISCOURAGED)
   *     null or false  = the program cannot start as root
   *
   *   default_compression_level:
   *     [level]  = specify level of compression between 1 and 9
   *     0        = disable compression
   *     null     = use zlib default value
  **/
  permit_root_startup: false
  default_compression_level: 8
}

logger: {
  /* Six levels are defined here, each of which is assigned a hard-coded
   * name.
   *
   *   color:
   *     [codes]   = set ANSI color (do not edit unless you know them)
   *
   *   stream:
   *     "stdout"  = standard output (see below)
   *     "stderr"  = standard error (see below)
   *     null      = disabled
  **/
  levels: {
    fatal: {
      color: "35;1"  // bright magenta
      stream: "stderr"
    }

    error: {
      color: "31;1"  // bright red
      stream: "stderr"
    }

    warn: {
      color: "33"  // yellow
      stream: "stdout"
    }

    info: {
      color: "32"  // green
      stream: "stdout"
    }

    debug: {
      color: "36"  // cyan
      stream: "stdout"
    }

    trace: {
      color: "34;1"  // bright blue
      //stream: "stdout"
    }
  }

  /* By convention, {fatal,error,warn} logs are sent to standard error
   * and {info,debug,trace} logs are sent to standard output. However,
   * if the process is a daemon, both streams will have been closed. The
   * files specified here are always written, even after the process has
   * daemonized itself.
   *
   *   color:
   *     true    = enabled
   *     false   = disabled
   *     null    = enabled if terminal, disabled otheriwse
   *
   *   file:
   *     [path]  = copy text to this file in append mode
   *     null    = do not copy anywhere
  **/
  streams: {
    stderr: {
      color: true
      file: "../../var/poseidon/server.err"
    }

    stdout: {
      color: true
      file: "../../var/poseidon/server.log"
    }
  }
}

network: {
  /* These are parameters for I/O multiplexing.
   *
   *   event_buffer_size:
   *     [count]  = number of I/O events for each single poll
   *     null     = default value: 1024
   *
   *   io_buffer_size:
   *     [bytes]  = size of temporary buffer for each single operation
   *     null     = default value: 65536
   *
   *   throttle_size:
   *     [bytes]  = suspend reading if write queue exceeds this size
   *     null     = default value: 1048576
  **/
  poll: {
    event_buffer_size: 1024
    io_buffer_size: 65536
    throttle_size: 1048576
  }

  /* These are parameters for Transport Layer Security (TLS).
   *
   *   default_certificate:
   *     [path]  = default certificate file for servers
   *     null    = no default certificate
   *
   *   default_private_key:
   *     [path]  = default private key file for servers
   *     null    = no default private key
   *
   *   trusted_ca_path:
   *     [path]  = directory of trusted CA certificates for clients
   *     null    = no validation (DANGEROUS for production use)
  **/
  tls: {
    default_certificate: "tls/test.crt"
    default_private_key: "tls/test.key"
    trusted_ca_path: "/etc/ssl/certs"
  }

  /* These are parameters for HTTP decoders and encoders.
   *
   *   max_header_size:
   *     [bytes]  = maximum size of headers in a single request
   *     null     = default value: 16384
  */
  http: {
    max_header_size: 16384
  }
}

worker: {
  /* These are parameters for the worker thread pool.
   *
   *   thread_count:
   *     [count]  = maximum number of worker threads
   *     null     = use only one thread
  **/
  thread_count: 6
}

fiber: {
  /* These are parameters for fibers and the fiber scheduler. Each fiber
   * has its own stack, which is allocated using `mmap()`. As such, the
   * stack size must be a multiple of system page size. However we have
   * a stricter requirement that the stack size shall be a multiple of
   * 64KiB, for portability.
   *
   *   stack_vm_size:
   *     [bytes]  = stack size for each fiber, including 2 guard pages
   *     null     = use system thread stack size
   *
   *   warn_timeout:
   *     [secs]  = print a warning if suspension exceeds this duration
   *     null    = default value: 15 seconds
   *
   *   fail_timeout:
   *     [secs]  = resume execution if suspension exceeds this duration
   *     null    = default value: 300 seconds
  **/
  stack_vm_size: null
  warn_timeout: 15
  fail_timeout: 300
}

addons: [
  /* This is a list of addons (shared libraries) to load. Addons are
   * loaded in this precise order. If a string is not a path but a name,
   * conventional library search rules apply. Addons cannot be unloaded.
   *
   *   [path]  = the shared library to load
  **/
//  "libposeidon_example_fiber.so"
//  "libposeidon_example_timer.so"
//  "libposeidon_example_tcp-echo.so"
  "libposeidon_example_tls-echo.so"
//  "libposeidon_example_udp-echo.so"
]
